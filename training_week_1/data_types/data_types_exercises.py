"""
Практические упражнения: Типы данных в Python

Простыe упражнения для закрепления знаний о типах данных.
"""

# ============================================================================
# УПРАЖНЕНИЕ 1: Работа с числами
# ============================================================================

def exercise_1_numbers():
    """Работа с числами (int, float)"""
    print("=== Упражнение 1: Работа с числами ===")
    
    # Задача: Создайте переменные a = 10 и b = 3
    # Выполните все математические операции
    
    a = 10
    b = 3
    
    # TODO: Вычислите и выведите:
    # 1. Сумму a + b
    # 2. Разность a - b  
    # 3. Произведение a * b
    # 4. Частное a / b
    # 5. Остаток от деления a % b
    # 6. Целочисленное деление a // b
    
    print(f"a = {a}, b = {b}")
    # Ваш код здесь:
    
    print()


# ============================================================================
# УПРАЖНЕНИЕ 2: Работа со строками
# ============================================================================

def exercise_2_strings():
    """Работа со строками (str)"""
    print("=== Упражнение 2: Работа со строками ===")
    
    text = "Hello World Python"
    
    # TODO: Выполните операции со строкой:
    # 1. Подсчитайте количество символов
    # 2. Подсчитайте количество слов
    # 3. Преобразуйте в верхний регистр
    # 4. Преобразуйте в нижний регистр
    # 5. Замените пробелы на подчеркивания
    # 6. Проверьте, начинается ли с 'H'
    # 7. Проверьте, заканчивается ли на 'n'
    
    print(f"Исходная строка: '{text}'")
    # Ваш код здесь:
    
    print()


# ============================================================================
# УПРАЖНЕНИЕ 3: Работа со списками
# ============================================================================

def exercise_3_lists():
    """Работа со списками (list)"""
    print("=== Упражнение 3: Работа со списками ===")
    
    numbers = [3, 1, 4, 1, 5, 9, 2, 6]
    
    # TODO: Выполните операции со списком:
    # 1. Найдите максимальное значение
    # 2. Найдите минимальное значение
    # 3. Вычислите среднее арифметическое
    # 4. Отсортируйте по возрастанию
    # 5. Отсортируйте по убыванию
    # 6. Найдите сумму всех элементов
    # 7. Создайте список только четных чисел
    # 8. Создайте список только нечетных чисел
    
    print(f"Исходный список: {numbers}")
    # Ваш код здесь:
    
    print()


# ============================================================================
# УПРАЖНЕНИЕ 4: Работа со словарями
# ============================================================================

def exercise_4_dictionaries():
    """Работа со словарями (dict)"""
    print("=== Упражнение 4: Работа со словарями ===")
    
    students = {'Алиса': 85, 'Боб': 92, 'Карл': 78}
    
    # TODO: Выполните операции со словарем:
    # 1. Добавьте студента 'Дина' с оценкой 88
    # 2. Удалите студента 'Дина'
    # 3. Измените оценку Алисы на 90
    # 4. Найдите студента с наивысшей оценкой
    # 5. Найдите студента с наинизшей оценкой
    # 6. Вычислите среднюю оценку
    # 7. Создайте список студентов с оценкой выше 85
    
    print(f"Исходный словарь: {students}")
    # Ваш код здесь:
    
    print()


# ============================================================================
# УПРАЖНЕНИЕ 5: Работа с кортежами
# ============================================================================

def exercise_5_tuples():
    """Работа с кортежами (tuple)"""
    print("=== Упражнение 5: Работа с кортежами ===")
    
    # TODO: Создайте и работайте с кортежами:
    # 1. Создайте кортеж с координатами точки (0, 0)
    # 2. Создайте кортеж с координатами точки (3, 4)
    # 3. Вычислите расстояние между точками (формула: √((x2-x1)² + (y2-y1)²))
    # 4. Создайте кортеж с информацией о студенте (имя, возраст, оценка)
    # 5. Создайте список кортежей с информацией о 3 студентах
    # 6. Найдите самого старшего студента
    
    # Ваш код здесь:
    
    print()


# ============================================================================
# УПРАЖНЕНИЕ 6: Работа с множествами
# ============================================================================

def exercise_6_sets():
    """Работа с множествами (set)"""
    print("=== Упражнение 6: Работа с множествами ===")
    
    set_a = {1, 2, 3, 4, 5}
    set_b = {4, 5, 6, 7, 8}
    
    # TODO: Выполните операции с множествами:
    # 1. Найдите объединение множеств
    # 2. Найдите пересечение множеств
    # 3. Найдите разность A - B
    # 4. Найдите разность B - A
    # 5. Найдите симметричную разность
    # 6. Проверьте, является ли A подмножеством B
    # 7. Удалите дубликаты из списка [1, 2, 2, 3, 4, 4, 5]
    
    print(f"Множество A: {set_a}")
    print(f"Множество B: {set_b}")
    # Ваш код здесь:
    
    print()


# ============================================================================
# УПРАЖНЕНИЕ 7: Преобразование типов
# ============================================================================

def exercise_7_conversions():
    """Преобразование типов данных"""
    print("=== Упражнение 7: Преобразование типов ===")
    
    # TODO: Выполните преобразования:
    # 1. Преобразуйте строку "123" в число
    # 2. Преобразуйте число 456 в строку
    # 3. Преобразуйте строку "Python" в список символов
    # 4. Преобразуйте список [1, 2, 3] в кортеж
    # 5. Преобразуйте кортеж (1, 2, 3) в список
    # 6. Преобразуйте список [1, 2, 2, 3] в множество
    # 7. Создайте словарь из списков ['a', 'b', 'c'] и [1, 2, 3]
    
    # Ваш код здесь:
    
    print()


# ============================================================================
# УПРАЖНЕНИЕ 8: Проверка типов
# ============================================================================

def exercise_8_type_checking():
    """Проверка типов данных"""
    print("=== Упражнение 8: Проверка типов ===")
    
    # TODO: Проверьте типы данных:
    # 1. Проверьте, является ли 42 числом
    # 2. Проверьте, является ли "hello" строкой
    # 3. Проверьте, является ли [1, 2, 3] списком
    # 4. Проверьте, является ли {'a': 1} словарем
    # 5. Создайте функцию, которая обрабатывает разные типы данных
    
    def process_data(data):
        # TODO: Напишите функцию, которая обрабатывает разные типы
        # Если это число - выведите "Это число: X"
        # Если это строка - выведите "Это строка: X"
        # Если это список - выведите "Это список с N элементами"
        pass
    
    # Тестирование
    process_data(42)
    process_data("hello")
    process_data([1, 2, 3])
    
    print()


# ============================================================================
# ЗАПУСК ВСЕХ УПРАЖНЕНИЙ
# ============================================================================

def run_all_exercises():
    """Запускает все упражнения"""
    print("ПРАКТИЧЕСКИЕ УПРАЖНЕНИЯ: ТИПЫ ДАННЫХ В PYTHON")
    print("=" * 50)
    print()
    
    exercise_1_numbers()
    exercise_2_strings()
    exercise_3_lists()
    exercise_4_dictionaries()
    exercise_5_tuples()
    exercise_6_sets()
    exercise_7_conversions()
    exercise_8_type_checking()
    
    print("Все упражнения завершены!")


if __name__ == "__main__":
    run_all_exercises() 